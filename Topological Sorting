#include<bits/stdc++.h>
using namespace std;
///BFS
vector<int> topoSort(vector<int>adj[],int V){
    vector<int>indegree(V,0);
    vector<int>topo;
    for(int i=0;i<V;i++){
        for(auto it : adj[i]){
            indegree[it]++;
        }
    }
    queue<int>q;
    for(int i=0;i<V;i++){
        if(indegree[i]==0){
            q.push(i);
        }
    }
    while(!q.empty()){
        int node =q.front();
        q.pop();
        topo.push_back(node);
        for(auto it : adj[node]){
            indegree[it]--;
            if(indegree[it]==0){
                q.push(it);
            }
        }
        
    }
    return topo;

}


int main(){
    int V,E;
    cout<<"enter no of vertices and edges : ";
    cin>>V>>E;
    vector<int>adj[V];
    for(int i=1;i<=E;i++){
        int u,v;
        cin>>u>>v;
        adj[u].push_back(v);
    }
    vector<int>res=topoSort(adj,V);
    for(int i=0;i<V;i++){
        cout<<res[i]<<" ";
    }


    return 0;
}
